<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Advanced Task Manager</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f6f8;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      transition: background 0.3s, color 0.3s;
    }
    body.dark {
      background: #1e1e1e;
      color: #f9f9f9;
    }
    .container {
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      width: 450px;
      transition: background 0.3s, color 0.3s;
    }
    body.dark .container {
      background: #2c2c2c;
      color: #f9f9f9;
    }
    h2 {
      text-align: center;
      margin-bottom: 20px;
    }
    .task-input {
      display: flex;
      flex-direction: column;
      gap: 10px;
      margin-bottom: 20px;
    }
    .task-input input, .task-input select {
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 8px;
      outline: none;
    }
    .task-input button {
      padding: 10px;
      border: none;
      background: #28a745;
      color: #fff;
      border-radius: 8px;
      cursor: pointer;
    }
    .task-input button:hover {
      background: #218838;
    }
    ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    li {
      display: flex;
      flex-direction: column;
      padding: 10px;
      margin-bottom: 10px;
      background: #f9f9f9;
      border-radius: 8px;
      transition: background 0.3s;
    }
    body.dark li {
      background: #3a3a3a;
    }
    li.completed span.task-name {
      text-decoration: line-through;
      color: gray;
    }
    .task-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .buttons button {
      margin-left: 5px;
      padding: 5px 10px;
      border: none;
      cursor: pointer;
      border-radius: 6px;
    }
    .complete-btn {
      background: #17a2b8;
      color: white;
    }
    .delete-btn {
      background: #dc3545;
      color: white;
    }
    .task-meta {
      font-size: 12px;
      color: #555;
      margin-top: 4px;
    }
    body.dark .task-meta {
      color: #aaa;
    }
    .progress-container {
      margin-top: 20px;
    }
    .progress-bar {
      height: 20px;
      background: #e0e0e0;
      border-radius: 10px;
      overflow: hidden;
    }
    .progress {
      height: 100%;
      background: #28a745;
      width: 0%;
      transition: width 0.3s ease-in-out;
    }
    .progress-text {
      margin-top: 5px;
      font-size: 14px;
      text-align: center;
    }
    .dark-toggle {
      margin-top: 15px;
      text-align: center;
    }
    .dark-toggle button {
      padding: 8px 15px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      background: #007bff;
      color: white;
    }
    .dark-toggle button:hover {
      background: #0056b3;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Advanced Task Manager</h2>
    <div class="task-input">
      <input type="text" id="taskInput" placeholder="Enter a new task...">
      <input type="date" id="taskDeadline">
      <select id="taskCategory">
        <option value="Work">Work</option>
        <option value="Study">Study</option>
        <option value="Personal">Personal</option>
      </select>
      <button onclick="addTask()">Add Task</button>
    </div>
    <ul id="taskList"></ul>
    <div class="progress-container">
      <div class="progress-bar">
        <div class="progress" id="progressBar"></div>
      </div>
      <div class="progress-text" id="progressText">0% completed</div>
    </div>
    <div class="dark-toggle">
      <button onclick="toggleDarkMode()">🌙 Toggle Dark Mode</button>
    </div>
  </div>

  <script>
    let tasks = JSON.parse(localStorage.getItem("advancedTasks")) || [];

    function renderTasks() {
      const taskList = document.getElementById("taskList");
      taskList.innerHTML = "";

      tasks.forEach((task, index) => {
        const li = document.createElement("li");
        li.className = task.completed ? "completed" : "";

        const header = document.createElement("div");
        header.className = "task-header";

        const span = document.createElement("span");
        span.textContent = task.name;
        span.className = "task-name";

        const btnContainer = document.createElement("div");
        btnContainer.className = "buttons";

        const completeBtn = document.createElement("button");
        completeBtn.textContent = "✔";
        completeBtn.className = "complete-btn";
        completeBtn.onclick = () => toggleComplete(index);

        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "✖";
        deleteBtn.className = "delete-btn";
        deleteBtn.onclick = () => deleteTask(index);

        btnContainer.appendChild(completeBtn);
        btnContainer.appendChild(deleteBtn);

        header.appendChild(span);
        header.appendChild(btnContainer);

        const meta = document.createElement("div");
        meta.className = "task-meta";
        meta.textContent = `📅 ${task.deadline || "No deadline"} | 🏷️ ${task.category}`;

        li.appendChild(header);
        li.appendChild(meta);
        taskList.appendChild(li);
      });

      updateProgress();
      localStorage.setItem("advancedTasks", JSON.stringify(tasks));
    }

    function addTask() {
      const taskInput = document.getElementById("taskInput");
      const deadlineInput = document.getElementById("taskDeadline");
      const categoryInput = document.getElementById("taskCategory");

      const taskName = taskInput.value.trim();
      const taskDeadline = deadlineInput.value;
      const taskCategory = categoryInput.value;

      if (taskName === "") return alert("Please enter a task!");

      tasks.push({ 
        name: taskName, 
        deadline: taskDeadline, 
        category: taskCategory, 
        completed: false 
      });

      taskInput.value = "";
      deadlineInput.value = "";
      renderTasks();
    }

    function toggleComplete(index) {
      tasks[index].completed = !tasks[index].completed;
      renderTasks();
    }

    function deleteTask(index) {
      tasks.splice(index, 1);
      renderTasks();
    }

    function updateProgress() {
      const total = tasks.length;
      const completed = tasks.filter(task => task.completed).length;
      const percent = total === 0 ? 0 : Math.round((completed / total) * 100);

      document.getElementById("progressBar").style.width = percent + "%";
      document.getElementById("progressText").textContent = `${percent}% completed`;
    }

    function toggleDarkMode() {
      document.body.classList.toggle("dark");
    }

    // Load tasks on page load
    renderTasks();
  </script>
</body>
</html>
